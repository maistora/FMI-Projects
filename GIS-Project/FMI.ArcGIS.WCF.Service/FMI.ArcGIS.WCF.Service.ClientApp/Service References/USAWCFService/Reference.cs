//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="City", Namespace="http://schemas.datacontract.org/2004/07/FMI.ArcGIS.WCF.Service")]
    public partial class City : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AreaNameField;
        
        private double XField;
        
        private double YField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AreaName {
            get {
                return this.AreaNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaNameField, value) != true)) {
                    this.AreaNameField = value;
                    this.RaisePropertyChanged("AreaName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double X {
            get {
                return this.XField;
            }
            set {
                if ((this.XField.Equals(value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Y {
            get {
                return this.YField;
            }
            set {
                if ((this.YField.Equals(value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CityDetails", Namespace="http://schemas.datacontract.org/2004/07/FMI.ArcGIS.WCF.Service")]
    public partial class CityDetails : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AreaNameField;
        
        private string CityClassField;
        
        private string IsCapitalField;
        
        private int Pop2000Field;
        
        private string StateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AreaName {
            get {
                return this.AreaNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaNameField, value) != true)) {
                    this.AreaNameField = value;
                    this.RaisePropertyChanged("AreaName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityClass {
            get {
                return this.CityClassField;
            }
            set {
                if ((object.ReferenceEquals(this.CityClassField, value) != true)) {
                    this.CityClassField = value;
                    this.RaisePropertyChanged("CityClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsCapital {
            get {
                return this.IsCapitalField;
            }
            set {
                if ((object.ReferenceEquals(this.IsCapitalField, value) != true)) {
                    this.IsCapitalField = value;
                    this.RaisePropertyChanged("IsCapital");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Pop2000 {
            get {
                return this.Pop2000Field;
            }
            set {
                if ((this.Pop2000Field.Equals(value) != true)) {
                    this.Pop2000Field = value;
                    this.RaisePropertyChanged("Pop2000");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HighwayDetails", Namespace="http://schemas.datacontract.org/2004/07/FMI.ArcGIS.WCF.Service")]
    public partial class HighwayDetails : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AdmnClassField;
        
        private double LengthField;
        
        private string RouteField;
        
        private string RteNumField;
        
        private string RteNum2Field;
        
        private string TollRdField;
        
        private string TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdmnClass {
            get {
                return this.AdmnClassField;
            }
            set {
                if ((object.ReferenceEquals(this.AdmnClassField, value) != true)) {
                    this.AdmnClassField = value;
                    this.RaisePropertyChanged("AdmnClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Length {
            get {
                return this.LengthField;
            }
            set {
                if ((this.LengthField.Equals(value) != true)) {
                    this.LengthField = value;
                    this.RaisePropertyChanged("Length");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Route {
            get {
                return this.RouteField;
            }
            set {
                if ((object.ReferenceEquals(this.RouteField, value) != true)) {
                    this.RouteField = value;
                    this.RaisePropertyChanged("Route");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RteNum {
            get {
                return this.RteNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RteNumField, value) != true)) {
                    this.RteNumField = value;
                    this.RaisePropertyChanged("RteNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RteNum2 {
            get {
                return this.RteNum2Field;
            }
            set {
                if ((object.ReferenceEquals(this.RteNum2Field, value) != true)) {
                    this.RteNum2Field = value;
                    this.RaisePropertyChanged("RteNum2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TollRd {
            get {
                return this.TollRdField;
            }
            set {
                if ((object.ReferenceEquals(this.TollRdField, value) != true)) {
                    this.TollRdField = value;
                    this.RaisePropertyChanged("TollRd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StateDetails", Namespace="http://schemas.datacontract.org/2004/07/FMI.ArcGIS.WCF.Service")]
    public partial class StateDetails : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double AreaField;
        
        private int Pop00_SQMIField;
        
        private int Pop2000Field;
        
        private string StateAbbrField;
        
        private string StateNameField;
        
        private string SubRegionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Area {
            get {
                return this.AreaField;
            }
            set {
                if ((this.AreaField.Equals(value) != true)) {
                    this.AreaField = value;
                    this.RaisePropertyChanged("Area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Pop00_SQMI {
            get {
                return this.Pop00_SQMIField;
            }
            set {
                if ((this.Pop00_SQMIField.Equals(value) != true)) {
                    this.Pop00_SQMIField = value;
                    this.RaisePropertyChanged("Pop00_SQMI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Pop2000 {
            get {
                return this.Pop2000Field;
            }
            set {
                if ((this.Pop2000Field.Equals(value) != true)) {
                    this.Pop2000Field = value;
                    this.RaisePropertyChanged("Pop2000");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateAbbr {
            get {
                return this.StateAbbrField;
            }
            set {
                if ((object.ReferenceEquals(this.StateAbbrField, value) != true)) {
                    this.StateAbbrField = value;
                    this.RaisePropertyChanged("StateAbbr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateName {
            get {
                return this.StateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StateNameField, value) != true)) {
                    this.StateNameField = value;
                    this.RaisePropertyChanged("StateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubRegion {
            get {
                return this.SubRegionField;
            }
            set {
                if ((object.ReferenceEquals(this.SubRegionField, value) != true)) {
                    this.SubRegionField = value;
                    this.RaisePropertyChanged("SubRegion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CountyDetails", Namespace="http://schemas.datacontract.org/2004/07/FMI.ArcGIS.WCF.Service")]
    public partial class CountyDetails : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double AreaField;
        
        private string NameField;
        
        private double Pop00_SQMIField;
        
        private int Pop2000Field;
        
        private string StateNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Area {
            get {
                return this.AreaField;
            }
            set {
                if ((this.AreaField.Equals(value) != true)) {
                    this.AreaField = value;
                    this.RaisePropertyChanged("Area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Pop00_SQMI {
            get {
                return this.Pop00_SQMIField;
            }
            set {
                if ((this.Pop00_SQMIField.Equals(value) != true)) {
                    this.Pop00_SQMIField = value;
                    this.RaisePropertyChanged("Pop00_SQMI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Pop2000 {
            get {
                return this.Pop2000Field;
            }
            set {
                if ((this.Pop2000Field.Equals(value) != true)) {
                    this.Pop2000Field = value;
                    this.RaisePropertyChanged("Pop2000");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateName {
            get {
                return this.StateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StateNameField, value) != true)) {
                    this.StateNameField = value;
                    this.RaisePropertyChanged("StateName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="USAWCFService.IUSAService")]
    public interface IUSAService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUSAService/SearchCitiesInState", ReplyAction="http://tempuri.org/IUSAService/SearchCitiesInStateResponse")]
        System.IAsyncResult BeginSearchCitiesInState(string stateAbbr, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.City> EndSearchCitiesInState(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUSAService/SearchCities", ReplyAction="http://tempuri.org/IUSAService/SearchCitiesResponse")]
        System.IAsyncResult BeginSearchCities(string userName, string password, double centerX, double centerY, double distance, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.City> EndSearchCities(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUSAService/FindCitiesByAttributes", ReplyAction="http://tempuri.org/IUSAService/FindCitiesByAttributesResponse")]
        System.IAsyncResult BeginFindCitiesByAttributes(string areaName, string state, string cityClass, string isCapital, string pop2000, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.CityDetails> EndFindCitiesByAttributes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUSAService/FindHighwaysByAttributes", ReplyAction="http://tempuri.org/IUSAService/FindHighwaysByAttributesResponse")]
        System.IAsyncResult BeginFindHighwaysByAttributes(string lenBottomBound, string lenUpperBound, string admClass, string rtNum, string route, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.HighwayDetails> EndFindHighwaysByAttributes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUSAService/FindStatesByAttributes", ReplyAction="http://tempuri.org/IUSAService/FindStatesByAttributesResponse")]
        System.IAsyncResult BeginFindStatesByAttributes(string stateName, string subRegion, string stateAbbr, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.StateDetails> EndFindStatesByAttributes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUSAService/FindCountiesByAttributes", ReplyAction="http://tempuri.org/IUSAService/FindCountiesByAttributesResponse")]
        System.IAsyncResult BeginFindCountiesByAttributes(string name, string stateName, string areaBottom, string areaTop, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.CountyDetails> EndFindCountiesByAttributes(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUSAServiceChannel : FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.IUSAService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchCitiesInStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchCitiesInStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.City> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.City>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchCitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchCitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.City> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.City>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FindCitiesByAttributesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FindCitiesByAttributesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.CityDetails> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.CityDetails>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FindHighwaysByAttributesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FindHighwaysByAttributesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.HighwayDetails> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.HighwayDetails>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FindStatesByAttributesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FindStatesByAttributesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.StateDetails> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.StateDetails>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FindCountiesByAttributesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FindCountiesByAttributesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.CountyDetails> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.CountyDetails>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class USAServiceClient : System.ServiceModel.ClientBase<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.IUSAService>, FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.IUSAService {
        
        private BeginOperationDelegate onBeginSearchCitiesInStateDelegate;
        
        private EndOperationDelegate onEndSearchCitiesInStateDelegate;
        
        private System.Threading.SendOrPostCallback onSearchCitiesInStateCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchCitiesDelegate;
        
        private EndOperationDelegate onEndSearchCitiesDelegate;
        
        private System.Threading.SendOrPostCallback onSearchCitiesCompletedDelegate;
        
        private BeginOperationDelegate onBeginFindCitiesByAttributesDelegate;
        
        private EndOperationDelegate onEndFindCitiesByAttributesDelegate;
        
        private System.Threading.SendOrPostCallback onFindCitiesByAttributesCompletedDelegate;
        
        private BeginOperationDelegate onBeginFindHighwaysByAttributesDelegate;
        
        private EndOperationDelegate onEndFindHighwaysByAttributesDelegate;
        
        private System.Threading.SendOrPostCallback onFindHighwaysByAttributesCompletedDelegate;
        
        private BeginOperationDelegate onBeginFindStatesByAttributesDelegate;
        
        private EndOperationDelegate onEndFindStatesByAttributesDelegate;
        
        private System.Threading.SendOrPostCallback onFindStatesByAttributesCompletedDelegate;
        
        private BeginOperationDelegate onBeginFindCountiesByAttributesDelegate;
        
        private EndOperationDelegate onEndFindCountiesByAttributesDelegate;
        
        private System.Threading.SendOrPostCallback onFindCountiesByAttributesCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public USAServiceClient() {
        }
        
        public USAServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public USAServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public USAServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public USAServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<SearchCitiesInStateCompletedEventArgs> SearchCitiesInStateCompleted;
        
        public event System.EventHandler<SearchCitiesCompletedEventArgs> SearchCitiesCompleted;
        
        public event System.EventHandler<FindCitiesByAttributesCompletedEventArgs> FindCitiesByAttributesCompleted;
        
        public event System.EventHandler<FindHighwaysByAttributesCompletedEventArgs> FindHighwaysByAttributesCompleted;
        
        public event System.EventHandler<FindStatesByAttributesCompletedEventArgs> FindStatesByAttributesCompleted;
        
        public event System.EventHandler<FindCountiesByAttributesCompletedEventArgs> FindCountiesByAttributesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.IUSAService.BeginSearchCitiesInState(string stateAbbr, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchCitiesInState(stateAbbr, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.City> FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.IUSAService.EndSearchCitiesInState(System.IAsyncResult result) {
            return base.Channel.EndSearchCitiesInState(result);
        }
        
        private System.IAsyncResult OnBeginSearchCitiesInState(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string stateAbbr = ((string)(inValues[0]));
            return ((FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.IUSAService)(this)).BeginSearchCitiesInState(stateAbbr, callback, asyncState);
        }
        
        private object[] OnEndSearchCitiesInState(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.City> retVal = ((FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.IUSAService)(this)).EndSearchCitiesInState(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchCitiesInStateCompleted(object state) {
            if ((this.SearchCitiesInStateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchCitiesInStateCompleted(this, new SearchCitiesInStateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchCitiesInStateAsync(string stateAbbr) {
            this.SearchCitiesInStateAsync(stateAbbr, null);
        }
        
        public void SearchCitiesInStateAsync(string stateAbbr, object userState) {
            if ((this.onBeginSearchCitiesInStateDelegate == null)) {
                this.onBeginSearchCitiesInStateDelegate = new BeginOperationDelegate(this.OnBeginSearchCitiesInState);
            }
            if ((this.onEndSearchCitiesInStateDelegate == null)) {
                this.onEndSearchCitiesInStateDelegate = new EndOperationDelegate(this.OnEndSearchCitiesInState);
            }
            if ((this.onSearchCitiesInStateCompletedDelegate == null)) {
                this.onSearchCitiesInStateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchCitiesInStateCompleted);
            }
            base.InvokeAsync(this.onBeginSearchCitiesInStateDelegate, new object[] {
                        stateAbbr}, this.onEndSearchCitiesInStateDelegate, this.onSearchCitiesInStateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.IUSAService.BeginSearchCities(string userName, string password, double centerX, double centerY, double distance, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchCities(userName, password, centerX, centerY, distance, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.City> FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.IUSAService.EndSearchCities(System.IAsyncResult result) {
            return base.Channel.EndSearchCities(result);
        }
        
        private System.IAsyncResult OnBeginSearchCities(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            double centerX = ((double)(inValues[2]));
            double centerY = ((double)(inValues[3]));
            double distance = ((double)(inValues[4]));
            return ((FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.IUSAService)(this)).BeginSearchCities(userName, password, centerX, centerY, distance, callback, asyncState);
        }
        
        private object[] OnEndSearchCities(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.City> retVal = ((FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.IUSAService)(this)).EndSearchCities(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchCitiesCompleted(object state) {
            if ((this.SearchCitiesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchCitiesCompleted(this, new SearchCitiesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchCitiesAsync(string userName, string password, double centerX, double centerY, double distance) {
            this.SearchCitiesAsync(userName, password, centerX, centerY, distance, null);
        }
        
        public void SearchCitiesAsync(string userName, string password, double centerX, double centerY, double distance, object userState) {
            if ((this.onBeginSearchCitiesDelegate == null)) {
                this.onBeginSearchCitiesDelegate = new BeginOperationDelegate(this.OnBeginSearchCities);
            }
            if ((this.onEndSearchCitiesDelegate == null)) {
                this.onEndSearchCitiesDelegate = new EndOperationDelegate(this.OnEndSearchCities);
            }
            if ((this.onSearchCitiesCompletedDelegate == null)) {
                this.onSearchCitiesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchCitiesCompleted);
            }
            base.InvokeAsync(this.onBeginSearchCitiesDelegate, new object[] {
                        userName,
                        password,
                        centerX,
                        centerY,
                        distance}, this.onEndSearchCitiesDelegate, this.onSearchCitiesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.IUSAService.BeginFindCitiesByAttributes(string areaName, string state, string cityClass, string isCapital, string pop2000, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFindCitiesByAttributes(areaName, state, cityClass, isCapital, pop2000, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.CityDetails> FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.IUSAService.EndFindCitiesByAttributes(System.IAsyncResult result) {
            return base.Channel.EndFindCitiesByAttributes(result);
        }
        
        private System.IAsyncResult OnBeginFindCitiesByAttributes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string areaName = ((string)(inValues[0]));
            string state = ((string)(inValues[1]));
            string cityClass = ((string)(inValues[2]));
            string isCapital = ((string)(inValues[3]));
            string pop2000 = ((string)(inValues[4]));
            return ((FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.IUSAService)(this)).BeginFindCitiesByAttributes(areaName, state, cityClass, isCapital, pop2000, callback, asyncState);
        }
        
        private object[] OnEndFindCitiesByAttributes(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.CityDetails> retVal = ((FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.IUSAService)(this)).EndFindCitiesByAttributes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFindCitiesByAttributesCompleted(object state) {
            if ((this.FindCitiesByAttributesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FindCitiesByAttributesCompleted(this, new FindCitiesByAttributesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FindCitiesByAttributesAsync(string areaName, string state, string cityClass, string isCapital, string pop2000) {
            this.FindCitiesByAttributesAsync(areaName, state, cityClass, isCapital, pop2000, null);
        }
        
        public void FindCitiesByAttributesAsync(string areaName, string state, string cityClass, string isCapital, string pop2000, object userState) {
            if ((this.onBeginFindCitiesByAttributesDelegate == null)) {
                this.onBeginFindCitiesByAttributesDelegate = new BeginOperationDelegate(this.OnBeginFindCitiesByAttributes);
            }
            if ((this.onEndFindCitiesByAttributesDelegate == null)) {
                this.onEndFindCitiesByAttributesDelegate = new EndOperationDelegate(this.OnEndFindCitiesByAttributes);
            }
            if ((this.onFindCitiesByAttributesCompletedDelegate == null)) {
                this.onFindCitiesByAttributesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFindCitiesByAttributesCompleted);
            }
            base.InvokeAsync(this.onBeginFindCitiesByAttributesDelegate, new object[] {
                        areaName,
                        state,
                        cityClass,
                        isCapital,
                        pop2000}, this.onEndFindCitiesByAttributesDelegate, this.onFindCitiesByAttributesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.IUSAService.BeginFindHighwaysByAttributes(string lenBottomBound, string lenUpperBound, string admClass, string rtNum, string route, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFindHighwaysByAttributes(lenBottomBound, lenUpperBound, admClass, rtNum, route, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.HighwayDetails> FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.IUSAService.EndFindHighwaysByAttributes(System.IAsyncResult result) {
            return base.Channel.EndFindHighwaysByAttributes(result);
        }
        
        private System.IAsyncResult OnBeginFindHighwaysByAttributes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string lenBottomBound = ((string)(inValues[0]));
            string lenUpperBound = ((string)(inValues[1]));
            string admClass = ((string)(inValues[2]));
            string rtNum = ((string)(inValues[3]));
            string route = ((string)(inValues[4]));
            return ((FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.IUSAService)(this)).BeginFindHighwaysByAttributes(lenBottomBound, lenUpperBound, admClass, rtNum, route, callback, asyncState);
        }
        
        private object[] OnEndFindHighwaysByAttributes(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.HighwayDetails> retVal = ((FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.IUSAService)(this)).EndFindHighwaysByAttributes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFindHighwaysByAttributesCompleted(object state) {
            if ((this.FindHighwaysByAttributesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FindHighwaysByAttributesCompleted(this, new FindHighwaysByAttributesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FindHighwaysByAttributesAsync(string lenBottomBound, string lenUpperBound, string admClass, string rtNum, string route) {
            this.FindHighwaysByAttributesAsync(lenBottomBound, lenUpperBound, admClass, rtNum, route, null);
        }
        
        public void FindHighwaysByAttributesAsync(string lenBottomBound, string lenUpperBound, string admClass, string rtNum, string route, object userState) {
            if ((this.onBeginFindHighwaysByAttributesDelegate == null)) {
                this.onBeginFindHighwaysByAttributesDelegate = new BeginOperationDelegate(this.OnBeginFindHighwaysByAttributes);
            }
            if ((this.onEndFindHighwaysByAttributesDelegate == null)) {
                this.onEndFindHighwaysByAttributesDelegate = new EndOperationDelegate(this.OnEndFindHighwaysByAttributes);
            }
            if ((this.onFindHighwaysByAttributesCompletedDelegate == null)) {
                this.onFindHighwaysByAttributesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFindHighwaysByAttributesCompleted);
            }
            base.InvokeAsync(this.onBeginFindHighwaysByAttributesDelegate, new object[] {
                        lenBottomBound,
                        lenUpperBound,
                        admClass,
                        rtNum,
                        route}, this.onEndFindHighwaysByAttributesDelegate, this.onFindHighwaysByAttributesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.IUSAService.BeginFindStatesByAttributes(string stateName, string subRegion, string stateAbbr, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFindStatesByAttributes(stateName, subRegion, stateAbbr, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.StateDetails> FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.IUSAService.EndFindStatesByAttributes(System.IAsyncResult result) {
            return base.Channel.EndFindStatesByAttributes(result);
        }
        
        private System.IAsyncResult OnBeginFindStatesByAttributes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string stateName = ((string)(inValues[0]));
            string subRegion = ((string)(inValues[1]));
            string stateAbbr = ((string)(inValues[2]));
            return ((FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.IUSAService)(this)).BeginFindStatesByAttributes(stateName, subRegion, stateAbbr, callback, asyncState);
        }
        
        private object[] OnEndFindStatesByAttributes(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.StateDetails> retVal = ((FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.IUSAService)(this)).EndFindStatesByAttributes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFindStatesByAttributesCompleted(object state) {
            if ((this.FindStatesByAttributesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FindStatesByAttributesCompleted(this, new FindStatesByAttributesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FindStatesByAttributesAsync(string stateName, string subRegion, string stateAbbr) {
            this.FindStatesByAttributesAsync(stateName, subRegion, stateAbbr, null);
        }
        
        public void FindStatesByAttributesAsync(string stateName, string subRegion, string stateAbbr, object userState) {
            if ((this.onBeginFindStatesByAttributesDelegate == null)) {
                this.onBeginFindStatesByAttributesDelegate = new BeginOperationDelegate(this.OnBeginFindStatesByAttributes);
            }
            if ((this.onEndFindStatesByAttributesDelegate == null)) {
                this.onEndFindStatesByAttributesDelegate = new EndOperationDelegate(this.OnEndFindStatesByAttributes);
            }
            if ((this.onFindStatesByAttributesCompletedDelegate == null)) {
                this.onFindStatesByAttributesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFindStatesByAttributesCompleted);
            }
            base.InvokeAsync(this.onBeginFindStatesByAttributesDelegate, new object[] {
                        stateName,
                        subRegion,
                        stateAbbr}, this.onEndFindStatesByAttributesDelegate, this.onFindStatesByAttributesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.IUSAService.BeginFindCountiesByAttributes(string name, string stateName, string areaBottom, string areaTop, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFindCountiesByAttributes(name, stateName, areaBottom, areaTop, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.CountyDetails> FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.IUSAService.EndFindCountiesByAttributes(System.IAsyncResult result) {
            return base.Channel.EndFindCountiesByAttributes(result);
        }
        
        private System.IAsyncResult OnBeginFindCountiesByAttributes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string stateName = ((string)(inValues[1]));
            string areaBottom = ((string)(inValues[2]));
            string areaTop = ((string)(inValues[3]));
            return ((FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.IUSAService)(this)).BeginFindCountiesByAttributes(name, stateName, areaBottom, areaTop, callback, asyncState);
        }
        
        private object[] OnEndFindCountiesByAttributes(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.CountyDetails> retVal = ((FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.IUSAService)(this)).EndFindCountiesByAttributes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFindCountiesByAttributesCompleted(object state) {
            if ((this.FindCountiesByAttributesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FindCountiesByAttributesCompleted(this, new FindCountiesByAttributesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FindCountiesByAttributesAsync(string name, string stateName, string areaBottom, string areaTop) {
            this.FindCountiesByAttributesAsync(name, stateName, areaBottom, areaTop, null);
        }
        
        public void FindCountiesByAttributesAsync(string name, string stateName, string areaBottom, string areaTop, object userState) {
            if ((this.onBeginFindCountiesByAttributesDelegate == null)) {
                this.onBeginFindCountiesByAttributesDelegate = new BeginOperationDelegate(this.OnBeginFindCountiesByAttributes);
            }
            if ((this.onEndFindCountiesByAttributesDelegate == null)) {
                this.onEndFindCountiesByAttributesDelegate = new EndOperationDelegate(this.OnEndFindCountiesByAttributes);
            }
            if ((this.onFindCountiesByAttributesCompletedDelegate == null)) {
                this.onFindCountiesByAttributesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFindCountiesByAttributesCompleted);
            }
            base.InvokeAsync(this.onBeginFindCountiesByAttributesDelegate, new object[] {
                        name,
                        stateName,
                        areaBottom,
                        areaTop}, this.onEndFindCountiesByAttributesDelegate, this.onFindCountiesByAttributesCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.IUSAService CreateChannel() {
            return new USAServiceClientChannel(this);
        }
        
        private class USAServiceClientChannel : ChannelBase<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.IUSAService>, FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.IUSAService {
            
            public USAServiceClientChannel(System.ServiceModel.ClientBase<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.IUSAService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginSearchCitiesInState(string stateAbbr, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = stateAbbr;
                System.IAsyncResult _result = base.BeginInvoke("SearchCitiesInState", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.City> EndSearchCitiesInState(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.City> _result = ((System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.City>)(base.EndInvoke("SearchCitiesInState", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSearchCities(string userName, string password, double centerX, double centerY, double distance, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = userName;
                _args[1] = password;
                _args[2] = centerX;
                _args[3] = centerY;
                _args[4] = distance;
                System.IAsyncResult _result = base.BeginInvoke("SearchCities", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.City> EndSearchCities(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.City> _result = ((System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.City>)(base.EndInvoke("SearchCities", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFindCitiesByAttributes(string areaName, string state, string cityClass, string isCapital, string pop2000, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = areaName;
                _args[1] = state;
                _args[2] = cityClass;
                _args[3] = isCapital;
                _args[4] = pop2000;
                System.IAsyncResult _result = base.BeginInvoke("FindCitiesByAttributes", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.CityDetails> EndFindCitiesByAttributes(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.CityDetails> _result = ((System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.CityDetails>)(base.EndInvoke("FindCitiesByAttributes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFindHighwaysByAttributes(string lenBottomBound, string lenUpperBound, string admClass, string rtNum, string route, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = lenBottomBound;
                _args[1] = lenUpperBound;
                _args[2] = admClass;
                _args[3] = rtNum;
                _args[4] = route;
                System.IAsyncResult _result = base.BeginInvoke("FindHighwaysByAttributes", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.HighwayDetails> EndFindHighwaysByAttributes(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.HighwayDetails> _result = ((System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.HighwayDetails>)(base.EndInvoke("FindHighwaysByAttributes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFindStatesByAttributes(string stateName, string subRegion, string stateAbbr, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = stateName;
                _args[1] = subRegion;
                _args[2] = stateAbbr;
                System.IAsyncResult _result = base.BeginInvoke("FindStatesByAttributes", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.StateDetails> EndFindStatesByAttributes(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.StateDetails> _result = ((System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.StateDetails>)(base.EndInvoke("FindStatesByAttributes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFindCountiesByAttributes(string name, string stateName, string areaBottom, string areaTop, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = name;
                _args[1] = stateName;
                _args[2] = areaBottom;
                _args[3] = areaTop;
                System.IAsyncResult _result = base.BeginInvoke("FindCountiesByAttributes", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.CountyDetails> EndFindCountiesByAttributes(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.CountyDetails> _result = ((System.Collections.ObjectModel.ObservableCollection<FMI.ArcGIS.WCF.Service.ClientApp.USAWCFService.CountyDetails>)(base.EndInvoke("FindCountiesByAttributes", _args, result)));
                return _result;
            }
        }
    }
}
